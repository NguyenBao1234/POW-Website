<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>POW @ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/POW_Website.styles.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true"/>
    <link rel="icon" type="image/png" sizes="256x256" href="~/Image/Logo/POW_Logo_Transparent_Small.png">
    <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@500;700&display=swap" rel="stylesheet">
</head>

<body class="hide-initial">
<header>
    <!-- ✅ NAVBAR: đặt ngoài nội dung chính nhưng z-index cao -->
    <nav class="navbar navbar-expand-sm navbar-dark bg-transparent position-absolute top-0 start-0 w-100" style="z-index: 10;">
        <div class="container d-flex justify-content-between align-items-center">
            <!-- Logo + EU -->
            <div class="d-flex align-items-center gap-3">
                <a class="navbar-brand text-white fw-bold" asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="/Image/Logo/POW_Logo_Transparent.png" alt="POW Logo" style="height: 40px;">
                </a>
                @* <img src="/Image/Logo/VN_Logo.png" alt="VN" style="height: 30px;"> *@
            </div>

            <!-- Menu -->
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-end">
                <ul class="navbar-nav">
                    <li class="nav-item"><a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="AboutPow">ABOUT POW</a></li>
                    <li class="nav-item">
                        @{
                            var currentController = ViewContext.RouteData.Values["Controller"]?.ToString();
                            var currentAction = ViewContext.RouteData.Values["Action"]?.ToString();
                            
                            if (currentController == "Home" && currentAction == "Index")
                            {
                                <a class="nav-link text-white" href="#" onclick="smoothScrollTo(document.getElementById('nextSection'))">PROJECTS</a>
                            }
                            else {<a class="nav-link text-white" asp-controller="Home" asp-action="Index" asp-fragment="project">PROJECTS</a>}
                        }
                    </li>
                    <li class="nav-item"><a class="nav-link text-white" asp-controller="Home" asp-action="Contact">CONTACT</a></li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<div class="container-fluid p-0">
    <main role="main">
        @RenderBody()
    </main>
</div>
<footer class="site-footer">
    <div class="footer-content">
        <img src="/Image/Logo/POW_Logo_Transparent.png" style="width: auto; height: auto; max-width: 100%; max-height: 60px;" alt="Logo" class="footer-logo" />
        <div class="footer-info">
            <p>&copy; 2025 POW studio</p>
            <p>Viet Nam, Planet Earth</p>
        </div>
        <div class="footer-socials">
            <a href="https://twitter.com/powgamestd" target="_blank">Twitter</a>
            <a href="https://facebook.com/powgamestd" target="_blank">Facebook</a>
            <a href="https://www.youtube.com/c/POWstudio" target="_blank">YouTube</a>
        </div>
    </div>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>


<script>
    
    document.addEventListener('DOMContentLoaded', function () {
        updateBackgroundPositions();
        const caret = document.querySelector('.scrollCaretButton');

        // Appear Toggle Button
        window.addEventListener('scroll', () =>
        {
            if (window.scrollY > 10) {
                caret.classList.remove('fade-in');
                caret.classList.add('fade-out');
            } else {
                caret.classList.remove('fade-out');
                caret.classList.add('fade-in');
            }
        });
        const hash = window.location.hash;
        if (hash === '#project') {
            // Tìm phần tử có ID tương ứng
            const targetElement = document.getElementById('nextSection');
            if (targetElement) {
                setTimeout(() => {
                    smoothScrollTo(targetElement);
                }, 100); // Thử với 100ms hoặc hơn nếu cần
            }
        }
    });
    function smoothScrollTo(element)
    {
        const targetY = element.getBoundingClientRect().top + window.scrollY;
        const startY = window.scrollY;
        const distance = targetY - startY;
        const duration = 600;
        let startTime = null;

        function animation(currentTime) {
            if (startTime === null) startTime = currentTime;
            const timeElapsed = currentTime - startTime;
            const run = easeInOutQuad(timeElapsed, startY, distance, duration);
            window.scrollTo(0, run);
            if (timeElapsed < duration) requestAnimationFrame(animation);
        }

        function easeInOutQuad(t, b, c, d) {
            t /= d / 2;
            if (t < 1) return c / 2 * t * t + b;
            t--;
            return -c / 2 * (t * (t - 2) - 1) + b;
        }

        requestAnimationFrame(animation);
    }
    function updateBackgroundPositions() {
        const cards = document.querySelectorAll('.content-card');
        cards.forEach(card => {
            const rect = card.getBoundingClientRect();
            const offset = rect.top / window.innerHeight;
            card.style.backgroundPositionY = `${offset * -50}%`;
        });
    }
    
    window.addEventListener('scroll', function () {
        const cards = document.querySelectorAll('.content-card');
        cards.forEach(card => {
            const rect = card.getBoundingClientRect();
            const offset = rect.top / window.innerHeight;
            card.style.backgroundPositionY = `${offset * -50}%`;
        });
    });

    window.addEventListener('scroll', function () {
        const firstSplashBG = document.getElementById('firstSplashBg');
        if (firstSplashBG)
        {
            const scrollY = window.scrollY;
            firstSplashBG.style.transform = `translateY(${scrollY * 0.5}px)`;
        }
    });
    function activateFadeIn() {
        document.body.classList.remove('hide-initial');
        document.body.classList.add('fade-in-active');  
    }

    function resetFadeOut() {
        document.body.classList.remove('fade-in-active'); 
        document.body.classList.add('hide-initial'); 
    }
    
    window.addEventListener('pageshow', function(event) {
        if (event.persisted) 
        {
            
            resetFadeOut();
            setTimeout(() => {
                activateFadeIn();
                console.log("Page loaded from BFcache. Re-activating fade-in.");
            }, 50);
        } 
        else 
        {
            console.log("Page loaded fresh. Activating fade-in.");
            resetFadeOut();
            activateFadeIn()
        }
    });
</script>

