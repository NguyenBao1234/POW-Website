
<div class="position-relative overflow-hidden" style="height: 91vh">

    <div class="position-absolute top-0 start-0 w-100" id = "firstSplashBg" style="height: 91vh; overflow: hidden; z-index: 0; pointer-events: none;">

        <!-- 🔹 Nền video -->
        <div class="position-absolute top-0 start-0 w-100 h-91" style="z-index: 0; pointer-events: none;">
            <div id="yt-bg" style="width: 100vw; height: 56.25vw;top: -10vh; position: absolute "></div>
        </div>

        <!-- 🔹 Lớp phủ ảnh -->
        <div class="position-absolute top-0 start-0 w-100 h-100" id="overlayYTB"
             style="z-index: 1; transition: opacity 2s ease; opacity: 1; pointer-events: none;">
            <img src="/Image/ArtworkGame/FirstSplashBg2.jpg" alt="Ảnh phủ"style="width: 100%; height: 100%; object-fit: cover; object-position: center;">
        </div>
    </div>

    <!-- 🔸 Nội dung chính căn giữa -->
    <div class="position-relative d-flex justify-content-center align-items-center vh-100" style="z-index: 2;">
        <div class="text-center text-white">
            <img src="/Image/Logo/POW_Logo_Transparent.png " style="width: auto; height: auto; max-width: 100%; max-height: 120px;"/>
            <p class="lead mt-4">POW develops innovative and inspiring indie games.</p>
        </div>
    </div>

    <a class="scrollCaretButton" style="bottom: 10px; z-index: 3;" onclick="smoothScrollTo(document.getElementById('nextSection'))">
        <div class="caret-wrapper"><div class = "caret-icon"></div></div>
    </a>
    
</div>

<div  id="nextSection" class="display: flex; flex-direction: column; align-items: center; padding: 0; margin: 0;">
    @foreach (var game in Model)
    {
        <div class="content-card" style="background-image: url('@game.BgImageUrl')">
            <div class="center-content-wrapper">
                <div>
                    <img class="game-title-image" src="@game.TittleImageUrl"
                         onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                    <h1 style="display: none;font-size: 5em; font-weight: bold">@game.Title</h1>
                </div>
                <p class="mt-4">@game.ShortDescription</p>
                
                <a asp-controller="Game" asp-action="Detail" asp-route-slug="@game.Slug">
                    <button class="btn btn-outline-light text-uppercase border-1 rounded-0 " style="transition: all 0.4s ease-in-out;margin-bottom: 1vh;padding: 14px 32px;
    font-size: 1.1rem;">Learn More &raquo; </button>
                </a>
                
            </div>
        </div>
    }
</div>

@* FistSplashBG YTB loaded Callback *@
<script src="https://www.youtube.com/iframe_api"></script>
<script>
    let player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('yt-bg', {
            videoId: '109bOoM2hSw',
            playerVars: {
                autoplay: 1,
                mute: 1,
                loop: 1,
                playlist: '109bOoM2hSw',
                controls: 0,
                modestbranding: 1,
                showinfo: 0,
                rel: 0
            },
            events: {
                'onStateChange': onStateChangeYTBPlayer
            }
        });
    }
    //The YT variable is the primary object of the YouTube IFrame Player API. It is only available after the API has been fully loaded.
    function onStateChangeYTBPlayer(event) {
        if (event.data === YT.PlayerState.PLAYING) {
            const overlay = document.getElementById('overlayYTB');

            setTimeout(() => { overlay.style.opacity = "0";},3000);
        }
    }
    
    // completely reload the web page from scratch if load from "back from cache"
    window.addEventListener('pageshow', function (event) {
        if (event.persisted) { 
            const overlay = document.getElementById('overlayYTB');
            overlay.style.opacity = "1";
            
            if (!player || typeof player.getPlayerState !== "function") {onYouTubeIframeAPIReady();}
            else 
            {
                if (player.getPlayerState() === YT.PlayerState.PLAYING) {
                    setTimeout(() => {
                        overlay.style.opacity = "0";
                    }, 3000);
                }
                else {player.addEventListener('onStateChange', onStateChangeYTBPlayer);}
            }
        }
    });

    // Nếu API đã có sẵn trong DOM thì gọi lại
    document.addEventListener("DOMContentLoaded", () => {
        if (typeof YT === "object" && typeof YT.Player === "function") {
            onYouTubeIframeAPIReady();
        }
    });
</script>
